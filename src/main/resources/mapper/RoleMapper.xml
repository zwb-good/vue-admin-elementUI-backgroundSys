<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo1.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.example.demo1.pojo.Role">
    <id column="roleId" jdbcType="INTEGER" property="id" />
    <result column="roleCode" jdbcType="VARCHAR" property="code" />
    <result column="roleName" jdbcType="VARCHAR" property="name" />
    <result column="roleEffectiveDate" jdbcType="DATE" property="effectiveDate" />
    <result column="roleExpirationDate" jdbcType="DATE" property="expirationDate" />
    <result column="roleState" jdbcType="INTEGER" property="state" />
  </resultMap>

  <sql id="Base_Column_List" >
    select
      role.id AS roleId,
      role.code AS roleCode,
      role.name AS roleName,
      role.effectiveDate AS roleEffectiveDate,
      role.expirationDate AS roleExpirationDate,
      role.state AS roleState
    from role
  </sql>

  <select id="selectRole" resultMap="BaseResultMap" parameterType="com.example.demo1.vo.RoleVO">
    <include refid="Base_Column_List" />
    <where>
      1 = 1
      <if test="id != null"> and role.id = #{id}</if>
      <if test="name != null and name != ''"> and role.name like concat('%',#{name},'%')</if>
      <if test="state != null"> and role.state = #{state}</if>
      <if test="haveEffective"> and role.state = 1 and NOW() BETWEEN role.effectiveDate and role.expirationDate</if>
    </where>
    <if test="orderBy != null"> order by ${orderBy} ${order}</if>
    <if test="recordIndex !=null"> limit #{recordIndex},#{pageSize}</if>
  </select>

  <select id="countRole" resultType="java.lang.Integer" parameterType="com.example.demo1.vo.RoleVO">
    select count(role.id) from role
    <where>
      1 = 1
      <if test="id != null"> and role.id = #{id}</if>
      <if test="name != null and name != ''"> and role.name like concat('%',#{name},'%')</if>
      <if test="state != null"> and role.state = #{state}</if>
      <if test="haveEffective"> and role.state = 1 and NOW() BETWEEN role.effectiveDate and role.expirationDate</if>
    </where>
  </select>

  <select id="roleSelectExist" parameterType="com.example.demo1.pojo.Role" >
    select 1 from role
    <where>
      1 = 1
      <if test="id != null"> and menu.id = #{id,jdbcType="INTEGER"}</if>
      <if test="roleName != null"> and menu.roleName = #{roleName,jdbcType="VARCHAR"}</if>
    </where>
    limit 1
  </select>

  <delete id="deleteRole" parameterType="java.lang.Integer">
    delete from role where role.id in
    <foreach collection="ids" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </delete>

  <update id="updateRole" parameterType="com.example.demo1.pojo.Role">
    update role
    <set>
      <if test="code != null">
        role.code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        role.name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="effectiveDate != null">
        role.effectiveDate = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="expirationDate != null">
        role.expirationDate = #{expirationDate,jdbcType=DATE},
      </if>
      <if test="state != null">
        role.state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where role.id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="saveRole" parameterType="com.example.demo1.pojo.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="effectiveDate != null">
        effectiveDate,
      </if>
      <if test="expirationDate != null">
        expirationDate,
      </if>
    </trim>

    <trim prefix="values(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="expirationDate != null">
        #{expirationDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>

</mapper>