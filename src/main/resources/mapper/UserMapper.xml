<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo1.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.demo1.pojo.User">
        <id column="userId" property="id" jdbcType="INTEGER"/>
        <result column="userUsername" property="username" jdbcType="VARCHAR"/>
        <result column="userPassword" property="password" jdbcType="VARCHAR"/>
        <result column="userName" property="name" jdbcType="VARCHAR"/>
        <result column="userSex" property="sex" jdbcType="INTEGER"/>
        <result column="userPhone" property="phone" jdbcType="VARCHAR"/>
        <result column="userEmail" property="email" jdbcType="VARCHAR"/>
        <result column="userCreateDate" property="createDate" jdbcType="DATE"/>
        <result column="userUpdateDate" property="updateDate" jdbcType="DATE"/>
        <result column="userState" property="state" jdbcType="INTEGER"/>
        <result column="userIsDel" property="isDel" jdbcType="INTEGER"/>
        <collection property="roleList" javaType="java.util.ArrayList" ofType="com.example.demo1.pojo.Role">
            <id column="roleId" jdbcType="INTEGER" property="id"/>
            <result column="roleName" jdbcType="VARCHAR" property="name"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    select
      user.id AS userId,
      user.username AS userUsername,
      user.password AS userPassword,
      user.name AS userName,
      user.sex AS userSex,
      user.phone AS userPhone,
      user.email AS userEmail,
      user.createDate AS userCreateDate,
      user.updateDate AS userUpdateDate,
      user.state AS userState
    from user
  </sql>

    <sql id="Login_Column_List">
    select
      user.id AS userId,
      user.username AS userUsername,
      user.password AS userPassword,
      user.name AS userName,
      user.createDate AS userCreateDate,
      user.updateDate AS userUpdateDate,
      user.state AS userState,
      role.id AS roleId,
      role.name AS roleName
    from user
    left join userrole on userrole.userId = user.id
    left join role on role.id = userrole.roleId
  </sql>

    <select id="selectById" resultMap="BaseResultMap">
        <include refid="Login_Column_List"/>
        <where>
            user.username = #{username} and user.password = #{password}
            /*and role.state = 1 and NOW() BETWEEN role.effectiveDate and role.expirationDate*/
        </where>
    </select>

    <select id="findByUsername" resultMap="BaseResultMap">
        <include refid="Login_Column_List"/>
        <where>
            user.username = #{username}
        </where>
    </select>


    <select id="selectUser" resultMap="BaseResultMap" parameterType="com.example.demo1.vo.UserVO">
        <include refid="Base_Column_List"/>
        <where>
            1 = 1
            <if test="username != null">
                and user.username like concat('%',#{username},'%')
            </if>
            <if test="name != null">
                and user.name like concat('%',#{name},'%')
            </if>
            <if test="startDate != null and endDate != null">
                and createDate BETWEEN #{startDate} and #{endDate}
            </if>
            <if test="state != null">
                and user.state = #{state}
            </if>
        </where>
        <if test="orderBy != null">
            order by ${orderBy} ${order}
        </if>
        <if test="recordIndex !=null">
            limit #{recordIndex},#{pageSize}
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer" parameterType="com.example.demo1.vo.UserVO">
        select count(user.id) from user
        <where>
            1 = 1
            <if test="username != null">
                and user.username like concat('%',#{username},'%')
            </if>
            <if test="name != null">
                and user.name like concat('%',#{name},'%')
            </if>
            <if test="startDate != null and endDate != null">
                and createDate BETWEEN #{startDate} and #{endDate}
            </if>
            <if test="state != null">
                and user.state = #{state}
            </if>
        </where>
    </select>

    <select id="userSelectExist" resultType="java.lang.Integer" parameterType="java.lang.String">
    select 1 from user where username = #{username,jdbcType=VARCHAR} limit 1
  </select>

    <insert id="saveUser" parameterType="com.example.demo1.pojo.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="updateDate != null">
                updateDate,
            </if>
        </trim>

        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="com.example.demo1.vo.UserVO">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                createDate = #{createDate,jdbcType=DATE},
            </if>
            <if test="updateDate != null">
                updateDate = #{updateDate,jdbcType=DATE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        <where>
            user.id = #{id,jdbcType=INTEGER}
        </where>
    </update>

    <delete id="deleteUser">
        delete from user where user.id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>


</mapper>